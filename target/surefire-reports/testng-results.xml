<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="12" total="18" passed="5">
  <reporter-output>
    <line>
      <![CDATA[Excel Sheet cleanup started]]>
    </line>
    <line>
      <![CDATA[Excel Cleanup is done]]>
    </line>
    <line>
      <![CDATA[===== Browser Configuration started ======]]>
    </line>
    <line>
      <![CDATA[===== Browser Configuration Ended ======]]>
    </line>
    <line>
      <![CDATA[Login Operation Strarted]]>
    </line>
    <line>
      <![CDATA[Login Operation Finished]]>
    </line>
    <line>
      <![CDATA[===== Checking the cases with open & Pending IR status ======]]>
    </line>
    <line>
      <![CDATA[===== Done Checking the cases with open & Pending IR status ======]]>
    </line>
    <line>
      <![CDATA[======= Started capturing the latest case logs ====== ]]>
    </line>
    <line>
      <![CDATA[===== App Closed ======]]>
    </line>
  </reporter-output>
  <suite name="DFM Automation Flow" duration-ms="122148" started-at="2021-10-23T08:24:38 IST" finished-at="2021-10-23T08:26:40 IST">
    <groups>
    </groups>
    <test name="DFM Login" duration-ms="122148" started-at="2021-10-23T08:24:38 IST" finished-at="2021-10-23T08:26:40 IST">
      <class name="com.ms.dfm.TC_03_GetCaseLogs">
        <test-method status="FAIL" signature="getLatestCaseNotes()[pri:6, instance:com.ms.dfm.TC_03_GetCaseLogs@130a0f66]" name="getLatestCaseNotes" duration-ms="54361" started-at="2021-10-23T08:25:44 IST" description="Collect Latest Case Updates" finished-at="2021-10-23T08:26:38 IST">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The maximum length of cell contents (text) is 32767 characters]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The maximum length of cell contents (text) is 32767 characters
at org.apache.poi.ss.usermodel.CellBase.checkLength(CellBase.java:293)
at org.apache.poi.ss.usermodel.CellBase.setCellValue(CellBase.java:274)
at com.ms.readFiles.writeDFMExcel.writeCaseNotes(writeDFMExcel.java:359)
at com.ms.dfm.modules.getCaseNotes.caseNotes(getCaseNotes.java:86)
at com.ms.dfm.TC_03_GetCaseLogs.getLatestCaseNotes(TC_03_GetCaseLogs.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[======= Started capturing the latest case logs ====== ]]>
            </line>
          </reporter-output>
        </test-method> <!-- getLatestCaseNotes -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ms.dfm.TC_03_GetCaseLogs@130a0f66]" name="getResult" is-config="true" duration-ms="9" started-at="2021-10-23T08:26:38 IST" finished-at="2021-10-23T08:26:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getLatestCaseNotes status=FAILURE method=TC_03_GetCaseLogs.getLatestCaseNotes()[pri:6, instance:com.ms.dfm.TC_03_GetCaseLogs@130a0f66] output======== Started capturing the latest case logs ====== ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ms.dfm.TC_03_GetCaseLogs -->
      <class name="com.ms.dfm.TC_01_Home_Login">
        <test-method status="PASS" signature="initiateReporter()[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="initiateReporter" is-config="true" duration-ms="1368" started-at="2021-10-23T08:24:31 IST" finished-at="2021-10-23T08:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateReporter -->
        <test-method status="PASS" signature="Cleanup()[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="Cleanup" is-config="true" duration-ms="5476" started-at="2021-10-23T08:24:32 IST" depends-on-methods="com.ms.dfm.utils.listeners.GenerateReport.initiateReporter" finished-at="2021-10-23T08:24:38 IST">
          <reporter-output>
            <line>
              <![CDATA[Excel Sheet cleanup started]]>
            </line>
            <line>
              <![CDATA[Excel Cleanup is done]]>
            </line>
          </reporter-output>
        </test-method> <!-- Cleanup -->
        <test-method status="PASS" signature="choseBrowser()[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="choseBrowser" is-config="true" duration-ms="16931" started-at="2021-10-23T08:24:38 IST" finished-at="2021-10-23T08:24:55 IST">
          <reporter-output>
            <line>
              <![CDATA[===== Browser Configuration started ======]]>
            </line>
            <line>
              <![CDATA[===== Browser Configuration Ended ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- choseBrowser -->
        <test-method status="PASS" signature="enterUsername()[pri:1, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="enterUsername" duration-ms="199" started-at="2021-10-23T08:24:55 IST" description="Enter UserName" finished-at="2021-10-23T08:24:55 IST">
          <reporter-output>
            <line>
              <![CDATA[Login Operation Strarted]]>
            </line>
          </reporter-output>
        </test-method> <!-- enterUsername -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="getResult" is-config="true" duration-ms="27" started-at="2021-10-23T08:24:55 IST" finished-at="2021-10-23T08:24:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterUsername status=SUCCESS method=TC_01_Home_Login.enterUsername()[pri:1, instance:com.ms.dfm.TC_01_Home_Login@1af1347d] output=Login Operation Strarted]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="enterPassword()[pri:2, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="enterPassword" duration-ms="6" started-at="2021-10-23T08:24:55 IST" description="Enter Password" finished-at="2021-10-23T08:24:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="getResult" is-config="true" duration-ms="1" started-at="2021-10-23T08:24:55 IST" finished-at="2021-10-23T08:24:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterPassword status=SUCCESS method=TC_01_Home_Login.enterPassword()[pri:2, instance:com.ms.dfm.TC_01_Home_Login@1af1347d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="clickSignIn()[pri:3, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="clickSignIn" duration-ms="5" started-at="2021-10-23T08:24:55 IST" description="Sing in to DFM" finished-at="2021-10-23T08:24:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSignIn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="getResult" is-config="true" duration-ms="1" started-at="2021-10-23T08:24:55 IST" finished-at="2021-10-23T08:24:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickSignIn status=SUCCESS method=TC_01_Home_Login.clickSignIn()[pri:3, instance:com.ms.dfm.TC_01_Home_Login@1af1347d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="verifyHomepage()[pri:4, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="verifyHomepage" duration-ms="27426" started-at="2021-10-23T08:24:55 IST" description="Verify HomePage" finished-at="2021-10-23T08:25:23 IST">
          <reporter-output>
            <line>
              <![CDATA[Login Operation Finished]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyHomepage -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="getResult" is-config="true" duration-ms="1" started-at="2021-10-23T08:25:23 IST" finished-at="2021-10-23T08:25:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomepage status=SUCCESS method=TC_01_Home_Login.verifyHomepage()[pri:4, instance:com.ms.dfm.TC_01_Home_Login@1af1347d] output=Login Operation Finished]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="closeBrowser" is-config="true" duration-ms="1566" started-at="2021-10-23T08:26:38 IST" finished-at="2021-10-23T08:26:40 IST">
          <reporter-output>
            <line>
              <![CDATA[===== App Closed ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="Finish()[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="Finish" is-config="true" duration-ms="1" started-at="2021-10-23T08:26:40 IST" finished-at="2021-10-23T08:26:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Finish -->
        <test-method status="PASS" signature="closeReporter()[pri:0, instance:com.ms.dfm.TC_01_Home_Login@1af1347d]" name="closeReporter" is-config="true" duration-ms="984" started-at="2021-10-23T08:26:40 IST" depends-on-methods="com.ms.readFiles.CleanupExcel.Finish" finished-at="2021-10-23T08:26:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReporter -->
      </class> <!-- com.ms.dfm.TC_01_Home_Login -->
      <class name="com.ms.dfm.TC_02_CollectCaseStatusAndSeverity">
        <test-method status="PASS" signature="openCases()[pri:5, instance:com.ms.dfm.TC_02_CollectCaseStatusAndSeverity@76b0ae1b]" name="openCases" duration-ms="21227" started-at="2021-10-23T08:25:23 IST" description="Collect Open Case Info" finished-at="2021-10-23T08:25:44 IST">
          <reporter-output>
            <line>
              <![CDATA[===== Checking the cases with open & Pending IR status ======]]>
            </line>
            <line>
              <![CDATA[===== Done Checking the cases with open & Pending IR status ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- openCases -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ms.dfm.TC_02_CollectCaseStatusAndSeverity@76b0ae1b]" name="getResult" is-config="true" duration-ms="9" started-at="2021-10-23T08:25:44 IST" finished-at="2021-10-23T08:25:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openCases status=SUCCESS method=TC_02_CollectCaseStatusAndSeverity.openCases()[pri:5, instance:com.ms.dfm.TC_02_CollectCaseStatusAndSeverity@76b0ae1b] output====== Checking the cases with open & Pending IR status ======]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ms.dfm.TC_02_CollectCaseStatusAndSeverity -->
    </test> <!-- DFM Login -->
  </suite> <!-- DFM Automation Flow -->
</testng-results>
